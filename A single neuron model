#######################################################INITIAL CONDITIONS#############################################
%%%%%%%%%%%%%%%%%%%%%%%%%%%% NERST POTENTIAL %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Na
z1=1;
Co1=145;
Ci1=12;
%K
z2=1;
Co2=4;
Ci2=155;
%Cl
z3=-1;
Co3=120;
Ci3=4;
%%reversal potentials
ENa=25/z1*log(Co1/Ci1);
Ek=25/z2*log(Co2/Ci2);
Ecl=25/z3*log(Co3/Ci3);

%%%%%%%%%%%%%%%%%%%%% MEMBRANE RESTING POTENTIAL %%%%%%%%%%%%%%%%%%%%%%%%%%%
%%ION PERMEALIBLITIES
Pna=0.04;
Pk=1;
Pcl=0.45;

Vm=25*log((Pna*Co1+Pk*Co2+Pcl*Ci3)/(Pna*Ci1+Pk*Ci2+Pcl*Co3));

%%%%%%%%%%%%% STARTING/RESTING POINT FOR DYNAMIC CHANNEL VARIABLES %%%%%%%%
%%Vm @rest = m0,h0,n0
%%sodium gating variable = m
m_alpha_A=0.182;
m_beta_A=0.124;
m_alpha_Vhalf=-35;
m_beta_Vhalf=-35;
m_alpha_k=9;
m_beta_k=9;

m_alpha=m_alpha_A*(Vm-m_alpha_Vhalf)/(1-exp(-(Vm-m_alpha_Vhalf)/m_alpha_k));
m_beta=-m_beta_A*(Vm-m_beta_Vhalf)/(1-exp((Vm-m_beta_Vhalf)/m_beta_k));
m0=m_alpha/(m_alpha+m_beta);

%%sodium gating variable = h

h_alpha_A=0.024;
h_beta_A=0.0091;
h_alpha_Vhalf=-50;
h_beta_Vhalf=-75;
h_alpha_k=5;
h_beta_k=5;

%h_Vhalf=-65;
%h_k=6.2;
%h0=1/(1+((exp(Vm-h_Vhalf))/h_k));
%h0=1-h0;
h_alpha=h_alpha_A*(Vm-h_alpha_Vhalf)/(1-exp(-(Vm-h_alpha_Vhalf)/h_alpha_k));
h_beta=-h_beta_A*(Vm-h_beta_Vhalf)/(1-exp((Vm-h_beta_Vhalf)/h_beta_k));
h0=h_alpha/(h_alpha+h_beta);


%%potassium gating variable = n
n_alpha_A=0.02;
n_beta_A=0.002;
n_alpha_Vhalf=20;
n_beta_Vhalf=20;
n_alpha_k=9;
n_beta_k=9;

n_alpha=n_alpha_A*(Vm-n_alpha_Vhalf)/(1-exp(-(Vm-n_alpha_Vhalf)/n_alpha_k));
n_beta=-n_beta_A*(Vm-n_beta_Vhalf)/(1-exp((Vm-n_beta_Vhalf)/n_beta_k));
n0=n_alpha/(n_alpha+n_beta);

fprintf('m0: %f\n', m0);
fprintf('h0: %f\n', h0);
fprintf('n0: %f\n', n0);


######################################################## MAIN #####################################################
% Simulation parameters
tspan = [0 5]; % Total simulation time in ms
dt = 0.01; % Time step in ms
time = tspan(1):dt:tspan(2); % Time vector

% Constants
Cm = 1; % Membrane capacitance, uF/cm^2
gNa_ = 100; % Sodium (Na) maximum conductances, mS/cm^2
gK_ = 50; % Postassium (K) maximum conductances, mS/cm^2
gL = 0.5; % Leak maximum conductances, mS/cm^2
Eleak=-72.5;%mV
Iapp = 80; % Applied current in uA/cm^2
t_on1 = 2; % time current pulse turns on (ms)
t_off1 = 2.2; % time current pulse turns off(ms)

%preallocation
Vm_ = zeros(1, length(time));
M = zeros(1, length(time));%%gating variables
H = zeros(1, length(time));
N = zeros(1, length(time));
% M(1)=m0; H(1)=h0; N(1)=n0;



%%main
for i= 1:length(time)-1
   
    m_alpha=m_alpha_A*(Vm-m_alpha_Vhalf)/(1-exp(-(Vm-m_alpha_Vhalf)/m_alpha_k));
    m_beta=-m_beta_A*(Vm-m_beta_Vhalf)/(1-exp((Vm-m_beta_Vhalf)/m_beta_k));

    h_alpha=h_alpha_A*(Vm-h_alpha_Vhalf)/(1-exp(-(Vm-h_alpha_Vhalf)/h_alpha_k));
    h_beta=-h_beta_A*(Vm-h_beta_Vhalf)/(1-exp((Vm-h_beta_Vhalf)/h_beta_k));

    n_alpha=n_alpha_A*(Vm-n_alpha_Vhalf)/(1-exp(-(Vm-n_alpha_Vhalf)/n_alpha_k));
    n_beta=-n_beta_A*(Vm-n_beta_Vhalf)/(1-exp((Vm-n_beta_Vhalf)/n_beta_k));

    dm = ((m_alpha*(1-m0)) - (m_beta*m0))*dt;
    dh = ((h_alpha*(1-h0)) - (h_beta*h0))*dt;
    dn = ((n_alpha*(1-n0)) - (n_beta*n0))*dt;

    %Current
    INa = gNa_*m0^3*(1-h0)*(Vm-ENa);%%%%%%
    IK = gK_*n0^4*(Vm-Ek);
    IL = gL*(Vm-Eleak);
    
    Iext = Iapp * (time(i) >= t_on1 && time(i) <= t_off1);
    dV = (Iext - (INa+IK+IL)) / Cm;
    

    I_total=Cm*(dV/dt)+INa+IK+IL+Iapp;

    
    % Store results
    Vm_(i+1) = Vm;
    M(i+1) = m0;
    H(i+1) = h0;
    N(i+1) = n0;

    %Update
    m0 = m0 + dm;
    h0 = h0 + dh;
    n0 = n0 + dn;
    Vm = Vm + dV*dt;


end    
[peaks, indxs]=findpeaks(Vm_,'MINPEAKHEIGHT',-10);
spiketimes=time(indxs);

% Plot results
subplot(2,1,1)
plot(time,Vm_,spiketimes,peaks,'*','LineWidth',2)
title('Membrane Potential Over Time');
xlabel('Time (ms)');
ylabel('Membrane Potential (mV)');
hold on
subplot(2,1,2)
%%plots to capture behaviour of gating variables
plot(time,M,time,1-H,time,N,'LineWidth',2)
title('Behavior  of Gating Variables Over Time');
xlabel('Time')
ylabel('Probability')
legend('M','H','N')

fprintf('Peak Voltage: %f\n', max(peaks));
% plot(Vm_,M,Vm_,1-H,Vm_,N,'LineWidth',2)
% xlabel('Voltage')
% ylabel('Probability')
% legend('M','H','N')

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



